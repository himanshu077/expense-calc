import 'package:expense_calc/components/constants/AppColors.dart';
import 'package:expense_calc/components/constants/TextStyles.dart';
import 'package:flutter/material.dart';

import 'AppFonts.dart';

class AppTheme {
  static final ThemeData light = ThemeData(
    // canvasColor: kCardColor,
    textTheme: const TextTheme(
        // bodyLarge: TextStyle(color: kFontBlackC),
        // bodyMedium: TextStyle(color: kFontBlackC),
        // bodySmall: TextStyle(color: kFontBlackC),
        // bodyText1: ,
        // bodyText2: ,
        // button: ,
        // caption: ,
        // displayLarge: ,
        // displayMedium: ,
        // displaySmall: ,
        // headline1: ,
        // headline2: ,
        // headline3: ,
        // headline4: ,
        // headline5: ,
        // headline6: ,
        //  headlineLarge: ,
        // headlineMedium: ,
        // headlineSmall: ,
        // labelLarge: ,
        // labelMedium: ,
        // labelSmall: ,
        // overline: ,
        // subtitle1: ,
        // subtitle2: ,
        // titleLarge: ,
        // titleMedium: ,
        // titleSmall: ,
        ),
    fontFamily: Family.regular,
    scaffoldBackgroundColor: AppColors.white,
    colorScheme: const ColorScheme.light(
      background: AppColors.primaryColor,
    ),
    primaryColor: AppColors.primaryGreen,
    // cardColor: kCardColor,
    inputDecorationTheme: EditTextTheme.editTextTheme,

    // backgroundColor: ,
    // actionIconTheme: ,
    // appBarTheme: ,
    // applyElevationOverlayColor: ,
    // badgeTheme: ,
    // bannerTheme: ,
    // bottomAppBarColor: ,
    // bottomAppBarTheme: ,
    // bottomNavigationBarTheme: ,
    // bottomSheetTheme: ,
    // brightness: ,
    // buttonBarTheme: ,
    // buttonTheme: ,
    // cardTheme: ,
    // checkboxTheme: ,
    // chipTheme: ,
    // colorSchemeSeed: ,
    // cupertinoOverrideTheme: ,
    // dataTableTheme: ,
    // datePickerTheme: ,
    // dialogBackgroundColor: ,
    // dialogTheme: ,
    // disabledColor: ,
    // dividerColor: ,
    // dividerTheme: ,
    // drawerTheme: ,
    // dropdownMenuTheme: ,
    // elevatedButtonTheme: ,
    // errorColor: ,
    // expansionTileTheme: ,
    // extensions: ,
    // filledButtonTheme: ,
    // floatingActionButtonTheme: ,
    // focusColor: ,
    // fontFamilyFallback: ,
    // highlightColor: ,
    // hintColor: ,
    // hoverColor: ,
    // iconButtonTheme: ,
    // iconTheme: ,
    // indicatorColor: ,
    // listTileTheme: ,
    // materialTapTargetSize: ,
    // menuBarTheme: ,
    // menuButtonTheme: ,
    // menuTheme: ,
    // navigationBarTheme: ,
    // navigationDrawerTheme: ,
    // navigationRailTheme: ,
    // outlinedButtonTheme: ,
    // package: ,
    // pageTransitionsTheme: ,
    // platform: ,
    // popupMenuTheme: ,
    // primaryColorDark: ,
    // primaryColorLight: ,
    // primaryIconTheme: ,
    // primarySwatch: ,
    // primaryTextTheme: ,
    // progressIndicatorTheme: ,
    // radioTheme: ,
    // scrollbarTheme: ,
    // searchBarTheme: ,
    // searchViewTheme: ,
    // secondaryHeaderColor: ,
    // segmentedButtonTheme: ,
    // selectedRowColor: ,
    // shadowColor: ,
    // sliderTheme: ,
    // snackBarTheme: ,
    // splashColor: ,
    // splashFactory: ,
    // switchTheme: ,
    // tabBarTheme: ,
    // textButtonTheme: ,
    // textSelectionTheme: ,
    // timePickerTheme: ,
    // toggleableActiveColor: ,
    // toggleButtonsTheme: ,
    // tooltipTheme: ,
    // typography: ,
    // unselectedWidgetColor: ,
    // useMaterial3: ,
    // visualDensity: ,
  );

  static final ThemeData dark = ThemeData(
    // canvasColor: kCardColor,
    textTheme: const TextTheme(
        // bodyLarge: TextStyle(color: kFontBlackC),
        // bodyMedium: TextStyle(color: kFontBlackC),
        // bodySmall: TextStyle(color: kFontBlackC),
        // bodyText1: ,
        // bodyText2: ,
        // button: ,
        // caption: ,
        // displayLarge: ,
        // displayMedium: ,
        // displaySmall: ,
        // headline1: ,
        // headline2: ,
        // headline3: ,
        // headline4: ,
        // headline5: ,
        // headline6: ,
        //  headlineLarge: ,
        // headlineMedium: ,
        // headlineSmall: ,
        // labelLarge: ,
        // labelMedium: ,
        // labelSmall: ,
        // overline: ,
        // subtitle1: ,
        // subtitle2: ,
        // titleLarge: ,
        // titleMedium: ,
        // titleSmall: ,
        ),
    fontFamily: Family.regular,
    scaffoldBackgroundColor: AppColors.black,
    colorScheme: const ColorScheme.light(
      background: AppColors.primaryColor,
    ),
    primaryColor: AppColors.primaryGreen,
    // cardColor: kCardColor,
    inputDecorationTheme: EditTextTheme.editTextTheme,

    // backgroundColor: ,
    // actionIconTheme: ,
    // appBarTheme: ,
    // applyElevationOverlayColor: ,
    // badgeTheme: ,
    // bannerTheme: ,
    // bottomAppBarColor: ,
    // bottomAppBarTheme: ,
    // bottomNavigationBarTheme: ,
    // bottomSheetTheme: ,
    // brightness: ,
    // buttonBarTheme: ,
    // buttonTheme: ,
    // cardTheme: ,
    // checkboxTheme: ,
    // chipTheme: ,
    // colorSchemeSeed: ,
    // cupertinoOverrideTheme: ,
    // dataTableTheme: ,
    // datePickerTheme: ,
    // dialogBackgroundColor: ,
    // dialogTheme: ,
    // disabledColor: ,
    // dividerColor: ,
    // dividerTheme: ,
    // drawerTheme: ,
    // dropdownMenuTheme: ,
    // elevatedButtonTheme: ,
    // errorColor: ,
    // expansionTileTheme: ,
    // extensions: ,
    // filledButtonTheme: ,
    // floatingActionButtonTheme: ,
    // focusColor: ,
    // fontFamilyFallback: ,
    // highlightColor: ,
    // hintColor: ,
    // hoverColor: ,
    // iconButtonTheme: ,
    // iconTheme: ,
    // indicatorColor: ,
    // listTileTheme: ,
    // materialTapTargetSize: ,
    // menuBarTheme: ,
    // menuButtonTheme: ,
    // menuTheme: ,
    // navigationBarTheme: ,
    // navigationDrawerTheme: ,
    // navigationRailTheme: ,
    // outlinedButtonTheme: ,
    // package: ,
    // pageTransitionsTheme: ,
    // platform: ,
    // popupMenuTheme: ,
    // primaryColorDark: ,
    // primaryColorLight: ,
    // primaryIconTheme: ,
    // primarySwatch: ,
    // primaryTextTheme: ,
    // progressIndicatorTheme: ,
    // radioTheme: ,
    // scrollbarTheme: ,
    // searchBarTheme: ,
    // searchViewTheme: ,
    // secondaryHeaderColor: ,
    // segmentedButtonTheme: ,
    // selectedRowColor: ,
    // shadowColor: ,
    // sliderTheme: ,
    // snackBarTheme: ,
    // splashColor: ,
    // splashFactory: ,
    // switchTheme: ,
    // tabBarTheme: ,
    // textButtonTheme: ,
    // textSelectionTheme: ,
    // timePickerTheme: ,
    // toggleableActiveColor: ,
    // toggleButtonsTheme: ,
    // tooltipTheme: ,
    // typography: ,
    // unselectedWidgetColor: ,
    // useMaterial3: ,
    // visualDensity: ,
  );
}


class EditTextTheme {
  static InputDecorationTheme get editTextTheme => InputDecorationTheme(
    // hoverColor: kGreenColor,
    focusColor: AppColors.primaryColor,
    // constraints: ,
    // activeIndicatorBorder: ,
    // alignLabelWithHint: ,
    // border: disableBorder,
    // contentPadding: ,
    // counterStyle: ,
    disabledBorder: disableBorder,
    errorBorder: errorBorder,
    // errorMaxLines: ,
    // errorStyle: ,
    // fillColor: AppColors.grey10,
    // filled: ,
    // floatingLabelAlignment: ,
    // floatingLabelBehavior: ,
    // floatingLabelStyle: ,
    focusedErrorBorder: setErrorBorder,
    // helperMaxLines: ,
    // helperStyle: ,
    // hintFadeDuration: ,
    // hintStyle: ,
    // iconColor: ,
    // isCollapsed: ,
    // isDense: ,
    labelStyle: TextStyles.regular14Black,
    outlineBorder: outlinedBorder,
    // prefixIconColor: ,
    // prefixStyle: ,
    // suffixIconColor: ,
    // suffixStyle: ,
    focusedBorder: focusedBorder,
    enabledBorder: enabledBorder,
  );

  static InputBorder get disableBorder => InputBorder.none;

  static BorderSide get outlinedBorder => BorderSide.none;

  static InputBorder get focusedBorder => setBorder;

  static InputBorder get enabledBorder => setBorder;

  static InputBorder get errorBorder => setErrorBorder;

  static InputBorder get setBorder => OutlineInputBorder(
      borderRadius: BorderRadius.circular(AppFonts.s10),
      borderSide: const BorderSide(color: AppColors.primaryColor, width: 2));

  static InputBorder get setErrorBorder => OutlineInputBorder(
      borderRadius: BorderRadius.circular(AppFonts.s10),
      borderSide: const BorderSide(color: AppColors.red, width: 2));
}


